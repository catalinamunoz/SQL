-- create spotify data table

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

-- find the top ten most popular songs of 2021 bases on spotify popularity
SELECT track_name,
       artist_name
  FROM BIT_DB.Spotifydata
 ORDER BY popularity DESC
 LIMIT 10;

-- artist with the most songs on the chart and how many they have (there were 2)
SELECT artist_name,
       COUNT( * ) AS num_hits
  FROM BIT_DB.Spotifydata
 GROUP BY artist_name
 ORDER BY num_hits DESC
 LIMIT 2;
 
-- average danceability and energy of the songs
SELECT AVG(danceability),
       AVG(energy) 
  FROM BIT_DB.Spotifydata;


-- songs that have featutring artists
SELECT track_name,
       artist_name
  FROM BIT_DB.Spotifydata
 WHERE track_name LIKE '%(with%' OR 
       track_name LIKE '%feat%';
       
-- most popular artists based on song popularity
SELECT artist_name,
       AVG(popularity) 
  FROM BIT_Db.Spotifydata
 GROUP BY artist_name
 ORDER BY AVG(popularity) DESC;
 
-- select the 5 longest songs and their artists
SELECT track_name,
       artist_name,
       duration_ms / 1000 AS duration_sec
  FROM BIT_DB.Spotifydata
 ORDER BY duration_sec DESC
 LIMIT 5;

-- For every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH avg_pop_cte AS (
  SELECT artist_name, AVG(popularity) AS avg_pop
  FROM Spotifydata 
  GROUP BY artist_name 
)
SELECT artist_name,
       avg_pop,
       'Top Star' AS tag
  FROM avg_pop_cte
 WHERE avg_pop > 89;

